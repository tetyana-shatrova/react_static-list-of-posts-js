{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","mail","email","className","name","href","body","CommentList","comments","length","map","UserInfo","user","mailUser","PostInfo","post","title","PostList","posts","id","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"408IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtBC,EAAI,iBAAaD,EAAQE,OAE/B,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,EAAQI,OAE9C,OAED,mBACED,UAAU,qBACVE,KAAMJ,EAFR,SAIGD,EAAQE,WAIb,qBAAKC,UAAU,oBAAf,SACGH,EAAQM,WChBJC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzBA,EAASC,OAEL,qBAAKN,UAAU,cAAf,SACGK,EAASE,KAAI,SAAAV,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,SAI1B,mBAAG,UAAQ,oBAAX,+BCVOW,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnBC,EAAQ,iBAAaD,EAAKV,OAEhC,OACE,mBAAGC,UAAU,WAAWE,KAAMQ,EAA9B,SACGD,EAAKR,SCHCU,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKZ,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGY,EAAKC,QAGR,8BACG,eAED,cAAC,EAAD,CAAUJ,KAAMG,EAAKH,aAIzB,mBAAGT,UAAU,iBAAb,SACGY,EAAKT,OAER,cAAC,EAAD,CAAaE,SAAUO,EAAKP,gBCnBnBS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKf,UAAU,WAAf,SACGe,EAAMR,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKI,UCW/B,IAAMD,EAAQE,EAAgBV,KAAI,SAAAK,GAAI,kCACxCA,GADwC,IAE3CH,MAXmBS,EAWDN,EAAKM,OAVhBC,EAAgBC,MAAK,SAAAX,GAAI,OAAIA,EAAKO,KAAOE,MACzC,MAUPb,UAPuBgB,EAOGT,EAAKI,GANxBM,EAAmBC,QAAO,SAAAlB,GAAQ,OAAIA,EAASgB,SAAWA,QADnE,IAAyBA,EALJH,KAeRM,EAAM,kBACjB,0BAASxB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUe,MAAOA,QCtBrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4f3f3261.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const mail = `mailto:${comment.email}`;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{comment.name}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={mail}\n        >\n          {comment.email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {comment.body}\n      </div>\n    </div>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  comments.length\n    ? (\n      <div className=\"CommentList\">\n        {comments.map(comment => (\n          <CommentInfo comment={comment} />\n        ))}\n      </div>\n    )\n    : <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const mailUser = `mailto:${user.email}`;\n\n  return (\n    <a className=\"UserInfo\" href={mailUser}>\n      {user.name}\n    </a>\n  );\n};\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {post.title}\n      </h3>\n\n      <p>\n        {' Posted by  '}\n\n        <UserInfo user={post.user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n    <CommentList comments={post.comments} />\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nfunction getCommentsById(postId) {\n  return commentsFromServer.filter(comments => comments.postId === postId);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}